{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/feedback/feedback.component.ts","./src/app/feedback/feedback.component.html","./src/app/navigation/navigation.component.ts","./src/app/navigation/navigation.component.html","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/notes/note/note.component.ts","./src/app/notes/note/note.component.html","./src/app/notes/notes.component.ts","./src/app/notes/notes.component.html","./src/app/shared/api.service.ts","./src/app/shared/note-text-filter.pipe.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Noteit-ng-app';\n}\n","<div class=\"container\">\n  <app-navigation></app-navigation>\n  <router-outlet></router-outlet>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {NavigationComponent} from './navigation/navigation.component';\nimport {FeedbackComponent} from './feedback/feedback.component';\nimport {NotesComponent} from './notes/notes.component';\nimport {NotFoundComponent} from './not-found/not-found.component';\nimport {Router, RouterModule, Routes} from \"@angular/router\";\nimport {FormsModule} from \"@angular/forms\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport { NoteComponent } from './notes/note/note.component';\nimport { NoteTextFilterPipe } from './shared/note-text-filter.pipe';\n\nconst appRoutes: Routes = [\n  {\n    path: 'notes',\n    component: NotesComponent\n  },\n  {\n    path: 'feedback',\n    component: FeedbackComponent\n  },\n  {\n    path: '',\n    component: NotesComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: '**',\n    component: NotFoundComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    FeedbackComponent,\n    NotesComponent,\n    NotFoundComponent,\n    NoteComponent,\n    NoteTextFilterPipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes, {enableTracing: true})\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ApiService} from '../shared/api.service';\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.css']\n})\nexport class FeedbackComponent implements OnInit {\n  model: FeedbackViewModel = {\n    name: '',\n    email: '',\n    feedback: ''\n  };\n\n  constructor(private apiService: ApiService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  sendFeedback(): void {\n    this.apiService.postFeedback(this.model).subscribe(\n      res => {\n        location.reload();\n      },\n      err => {\n        alert('An error has occurred while sending feedback');\n      }\n    );\n  }\n}\n\nexport interface FeedbackViewModel {\n  name: string;\n  email: string;\n  feedback: string;\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"offset-3\"></div>\n    <div class=\"col-md-6\">\n      <form name=\"form\" #f=\"ngForm\" (ngSubmit)=\"f.form.valid && sendFeedback()\" novalidate class=\"feedback-form\">\n\n        <!-- Name -->\n        <div class=\"form-group\">\n          <label for=\"name\">First Name</label>\n          <input type=\"text\"\n                 id=\"name\"\n                 class=\"form-control\"\n                 name=\"name\"\n                 placeholder=\"Your name\"\n                 [(ngModel)]=\"model.name\"\n                 #name=\"ngModel\"\n                 [ngClass]=\"{'is-invalid': f.submitted && name.invalid}\"\n                 required/>\n          <div *ngIf=\"f.submitted && name.invalid\" class=\"invalid-input\">\n            <div *ngIf=\"name.errors?.required\">Field is required</div>\n          </div>\n        </div>\n\n        <!-- Email -->\n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <input type=\"text\"\n                 id=\"email\"\n                 class=\"form-control\"\n                 name=\"email\"\n                 placeholder=\"Your email\"\n                 [(ngModel)]=\"model.email\"\n                 #email=\"ngModel\"\n                 [ngClass]=\"{'is-invalid':f.submitted && email.invalid}\"\n                 required email/>\n          <div *ngIf=\"f.submitted && email.invalid\" class=\"invalid-input\">\n            <div *ngIf=\"email.errors?.required\">Field is required</div>\n            <div *ngIf=\"email.errors?.email\">Field is not a valid email</div>\n          </div>\n        </div>\n\n        <!-- Feedback -->\n        <div class=\"form-group\">\n          <label for=\"feedback\">Feedback</label>\n          <textarea\n            id=\"feedback\"\n            class=\"form-control\"\n            name=\"feedback\"\n            placeholder=\"Your feedback\"\n            [(ngModel)]=\"model.feedback\"\n            #feedback=\"ngModel\"\n            [ngClass]=\"{'is-invalid': f.submitted && feedback.invalid}\"\n            required minlength=\"10\">\n\t\t\t    </textarea>\n          <div *ngIf=\"f.submitted && feedback.invalid\" class=\"invalid-input\">\n            <div *ngIf=\"feedback.errors?.required\">Field is required</div>\n            <div *ngIf=\"feedback.errors?.minlength\">Field is to small (try 10 characters)</div>\n          </div>\n        </div>\n\n        <button type=\"submit\" class=\"btn btn-info pull-right\">\n          <i class=\"fa fa-envelope-o\"></i>\n          <span> Send Feedback</span>\n        </button>\n      </form>\n    </div>\n    <div class=\"offset-3\"></div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" href=\"#\">\n    <i class=\"fa fa-sticky-note text-warning\"></i>\n    <span class=\"text-warning\"> noteit</span>\n  </a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarColor01\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/notes\">Notes </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/feedback\">Feedback</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Note} from '../model/note';\n\n@Component({\n  selector: 'app-note',\n  templateUrl: './note.component.html',\n  styleUrls: ['./note.component.css']\n})\nexport class NoteComponent implements OnInit {\n\n  @Input() note: Note;\n  @Output() noteUpdated: EventEmitter<Note> = new EventEmitter<Note>();\n  @Output() noteDeleted: EventEmitter<Note> = new EventEmitter<Note>();\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  updateNote() {\n    this.noteUpdated.emit(this.note);\n  }\n\n  deleteNote() {\n    this.noteDeleted.emit(this.note);\n  }\n}\n","<div class=\"card bg-warning\" style=\"border: 4px solid white;\">\n  <div class=\"card-body\" style=\"padding: 8px; margin-top: 8px;\">\n    <div>\n      <!-- Title-->\n      <input type=\"text\"\n             [(ngModel)]=\"note.title\"\n             (change)=\"updateNote()\"\n             class=\"input-label-lg\"\n             maxlength=\"18\" style=\"width: 80%\"/>\n      <a (click)=\"deleteNote()\" class=\"pull-right text-danger\">\n        <i class=\"fa fa-trash-o\"></i>\n      </a>\n    </div>\n    <!-- Text -->\n    <textarea class=\"input-label\"\n              [(ngModel)]=\"note.text\"\n              (change)=\"updateNote()\"\n              style=\"width: 100%\" rows=\"6\"></textarea>\n    <strong class=\"text-info\" style=\"font-size: small\">{{note.lastModifiedOn | date:'dd-MM-yyyy HH:mm'}}</strong>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Notebook} from './model/notebook';\nimport {ApiService} from '../shared/api.service';\nimport {Note} from './model/note';\n\n@Component({\n  selector: 'app-notes',\n  templateUrl: './notes.component.html',\n  styleUrls: ['./notes.component.css']\n})\nexport class NotesComponent implements OnInit {\n  notebooks: Notebook[] = [];\n  notes: Note[] = [];\n  selectedNotebook: Notebook;\n  searchText: string;\n\n  constructor(private apiService: ApiService) {\n  }\n\n  ngOnInit(): void {\n    this.getAllNotebooks();\n    this.getAllNotes();\n  }\n\n  public getAllNotebooks() {\n    this.apiService.getAllNotebooks().subscribe(\n      res => {\n        this.notebooks = res;\n      },\n      err => {\n        alert('An error has occurred');\n      }\n    );\n  }\n\n  getAllNotes() {\n    this.apiService.getAllNotes().subscribe(\n      res => {\n        this.notes = res;\n      },\n      error => {\n        alert('Error occurred while downloading message');\n      }\n    );\n  }\n\n  createNotebook() {\n    const newNotebook: Notebook = {\n      name: 'New notebook',\n      id: null,\n      numberOfNotes: 0\n    };\n\n    this.apiService.postNoteBook(newNotebook).subscribe(\n      res => {\n        newNotebook.id = res.id;\n        this.notebooks.push(newNotebook);\n      },\n      error => {\n        alert('An error has occurred while saving notebook');\n      }\n    );\n  }\n\n  updateNotebook(updatedNotebook: Notebook) {\n    this.apiService.postNoteBook(updatedNotebook).subscribe(\n      res => {\n      },\n      error => {\n        alert('An error has occurred while saving notebook');\n      }\n    );\n  }\n\n  deleteNotebook(notebook: Notebook) {\n    if (confirm('Are you sure you want to delete notebook?')) {\n      this.apiService.deleteNotebook(notebook.id).subscribe(\n        res => {\n          const indexOfNotebook = this.notebooks.indexOf(notebook);\n          this.notebooks.splice(indexOfNotebook, 1);\n        },\n        err => {\n          alert('Could not delete network');\n        }\n      );\n    }\n  }\n\n  deleteNote(note: Note) {\n    if (confirm('Are you sure you want to delete this note?')) {\n      this.apiService.deleteNote(note.id).subscribe(\n        res => {\n          const indexOfTheNote = this.notes.indexOf(note);\n          this.notes.splice(indexOfTheNote, 1);\n        },\n        error => {\n          alert('An error has occurred while deleting the note');\n        }\n      );\n    }\n  }\n\n  createNote(specificNotebookId: string) {\n    const newNote: Note = {\n      id: null,\n      title: 'New note',\n      text: 'Write some text here',\n      lastModifiedOn: null,\n      notebookId: specificNotebookId\n    };\n\n    this.apiService.postNote(newNote).subscribe(\n      res => {\n        newNote.id = res.id;\n        this.notes.push(newNote);\n      },\n      error => {\n        alert('An error occurred while saving note');\n      }\n    );\n  }\n\n  selectNotebook(notebook: Notebook) {\n    this.selectedNotebook = notebook;\n    this.apiService.getNotesByNotebook(notebook.id).subscribe(\n      res => {\n        this.notes = res;\n      },\n      error => {\n        alert('An error has occurred wile downloading the notes');\n      }\n    );\n  }\n\n  updateNote(updatedNote: Note) {\n    this.apiService.postNote(updatedNote).subscribe(\n      res => {\n      },\n      error => {\n        alert('An error occurred while saving note');\n      }\n    );\n  }\n\n  selectAllNotes() {\n    this.selectedNotebook = null;\n    this.getAllNotes();\n  }\n}\n","<div class=\"container\">\n  <!-- Note menu -->\n  <div class=\"row\" style=\"margin-top:12px;\">\n    <div class=\"col-md-8\">\n      <input type=\"text\"\n             [(ngModel)]=\"searchText\"\n             class=\"form-control\"\n             style=\"width: 100%;\"\n             placeholder=\"Search notes...\">\n    </div>\n    <div class=\"col-md-4\">\n      <button type=\"buton\"\n              (click)=\"createNotebook()\"\n              class=\"btn btn-info pull-right\"\n              style=\"margin-left:12px;\"><i class=\"fa fa-plus\"></i> New notebook\n      </button>\n      <button type=\"button\"\n              (click)=\"createNote(selectedNotebook.id)\"\n              [disabled]=\"selectedNotebook == null\"\n              class=\"btn btn-warning pull-right\"\n              style=\"margin-left:12px;\"><i class=\"fa fa-plus\"></i> New note\n      </button>\n    </div>\n\n  </div>\n\n  <!-- Note content -->\n  <div class=\"row\" style=\"margin-top: 28px;\">\n    <!-- Notebooks Menu -->\n    <div class=\"col-md-3\">\n      <br>\n      <div class=\"list-group list-group-flush\">\n        <a (click)=\"selectAllNotes()\" class=\"list-group-item list-group-item-action\">\n          <i class=\"fa fa-book\"></i>&nbsp;All\n        </a>\n        <!-- Notebook List -->\n        <a *ngFor=\"let notebook of notebooks\" (click)=\"selectNotebook(notebook)\" class=\"list-group-item list-group-item-action\">\n          <i class=\"fa fa-book\"></i>&nbsp;\n          <input [(ngModel)]=\"notebook.name\" (change)=\"updateNotebook(notebook)\" type=\"text\" class=\"input-label\"\n                 style=\"width: 80%\"/>\n          <a (click)=\"deleteNotebook(notebook)\" class=\"pull-right text-danger\">\n            <i class=\"fa fa-trash-o\"></i>\n          </a>\n        </a>\n      </div>\n    </div>\n\n    <!-- Notes Panel -->\n    <div class=\"col-md-9\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <!-- Message if there are no notes -->\n          <h3 *ngIf=\"selectedNotebook != null\">{{selectedNotebook.name}}</h3>\n          <h3 *ngIf=\"selectedNotebook == null\">All notes</h3>\n          <p *ngIf=\"this.notes.length === 0\">There are no notes to display :(</p>\n        </div>\n      </div>\n      <div class=\"row\">\n        <!-- Note list -->\n        <app-note *ngFor=\"let n of notes | noteTextFilter:searchText\"\n                  [note]=\"n\"\n                  (noteUpdated)=\"updateNote($event)\"\n                  (noteDeleted)=\"deleteNote($event)\">\n        </app-note>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Notebook} from '../notes/model/notebook';\nimport {FeedbackViewModel} from '../feedback/feedback.component';\nimport {Note} from '../notes/model/note';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private BASE_URL = 'http://localhost:8082/api';\n  private ALL_NOTEBOOKS_URL = `${this.BASE_URL}\\\\notebooks\\\\all`;\n  private SEND_FEEDBACK_URL = `${this.BASE_URL}\\\\feedback`;\n  private SAVE_UPDATE_NOTEBOOK = `${this.BASE_URL}\\\\notebooks`;\n  private DELETE_NOTEBOOK_URL = `${this.BASE_URL}\\\\notebooks\\\\`;\n  private ALL_NOTES_URL = `${this.BASE_URL}\\\\notes\\\\all`;\n  private NOTES_BY_NOTEBOOK_URL = `${this.BASE_URL}\\\\notes\\\\byNotebook\\\\`;\n  private SAVE_UPDATE_NOTE_URL = `${this.BASE_URL}\\\\notes\\\\`;\n  private DELETE_NOTE_URL = `${this.BASE_URL}\\\\notes\\\\`;\n\n  constructor(private  http: HttpClient) {\n\n  }\n\n  getAllNotebooks(): Observable<Notebook[]> {\n    return this.http.get<Notebook[]>(this.ALL_NOTEBOOKS_URL);\n  }\n\n  getAllNotes(): Observable<Note[]> {\n    return this.http.get<Note[]>(this.ALL_NOTES_URL);\n  }\n\n  getNotesByNotebook(notebookId: string): Observable<Note[]> {\n    return this.http.get<Note[]>(this.NOTES_BY_NOTEBOOK_URL + notebookId);\n  }\n\n  postFeedback(feedback: FeedbackViewModel): Observable<any> {\n    return this.http.post(this.SEND_FEEDBACK_URL, feedback);\n  }\n\n  postNoteBook(notebook: Notebook): Observable<Notebook> {\n    return this.http.post<Notebook>(this.SAVE_UPDATE_NOTEBOOK, notebook);\n  }\n\n  postNote(note: Note): Observable<Note>{\n    return this.http.post<Note>(this.SAVE_UPDATE_NOTE_URL, note);\n  }\n\n  deleteNotebook(id: string): Observable<any> {\n    return this.http.delete(this.DELETE_NOTEBOOK_URL + id);\n  }\n\n  deleteNote(notId: string): Observable<any>{\n    return this.http.delete(this.DELETE_NOTE_URL + notId);\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {Note} from '../notes/model/note';\n\n@Pipe({\n  name: 'noteTextFilter'\n})\nexport class NoteTextFilterPipe implements PipeTransform {\n\n  transform(notes: Note[], text: string): Note[] {\n    if (text == null || text === '') {\n      return notes;\n    }\n    return notes.filter(n => n.title.includes(text) || n.text.includes(text));\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}