{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/feedback/feedback.component.ts","webpack:///src/app/feedback/feedback.component.html","webpack:///src/app/navigation/navigation.component.ts","webpack:///src/app/navigation/navigation.component.html","webpack:///src/app/not-found/not-found.component.ts","webpack:///src/app/not-found/not-found.component.html","webpack:///src/app/notes/note/note.component.ts","webpack:///src/app/notes/note/note.component.html","webpack:///src/app/notes/notes.component.ts","webpack:///src/app/notes/notes.component.html","webpack:///src/app/shared/api.service.ts","webpack:///src/app/shared/note-text-filter.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","pathMatch","AppModule","forRoot","enableTracing","declarations","imports","providers","bootstrap","FeedbackComponent","apiService","model","name","email","feedback","postFeedback","subscribe","res","location","reload","err","alert","sendFeedback","NavigationComponent","NotFoundComponent","NoteComponent","noteUpdated","noteDeleted","emit","note","updateNote","deleteNote","NotesComponent","notebooks","notes","getAllNotebooks","getAllNotes","error","newNotebook","numberOfNotes","postNoteBook","push","updatedNotebook","notebook","confirm","deleteNotebook","indexOfNotebook","indexOf","splice","indexOfTheNote","specificNotebookId","newNote","text","lastModifiedOn","notebookId","postNote","selectedNotebook","getNotesByNotebook","updatedNote","createNotebook","createNote","selectAllNotes","ApiService","http","BASE_URL","ALL_NOTEBOOKS_URL","SEND_FEEDBACK_URL","SAVE_UPDATE_NOTEBOOK","DELETE_NOTEBOOK_URL","ALL_NOTES_URL","NOTES_BY_NOTEBOOK_URL","SAVE_UPDATE_NOTE_URL","DELETE_NOTE_URL","get","post","notId","providedIn","NoteTextFilterPipe","filter","n","includes","environment","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Noteit-ng-app';\n}\n","<div class=\"container\">\n  <app-navigation></app-navigation>\n  <router-outlet></router-outlet>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {NavigationComponent} from './navigation/navigation.component';\nimport {FeedbackComponent} from './feedback/feedback.component';\nimport {NotesComponent} from './notes/notes.component';\nimport {NotFoundComponent} from './not-found/not-found.component';\nimport {Router, RouterModule, Routes} from \"@angular/router\";\nimport {FormsModule} from \"@angular/forms\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport { NoteComponent } from './notes/note/note.component';\nimport { NoteTextFilterPipe } from './shared/note-text-filter.pipe';\n\nconst appRoutes: Routes = [\n  {\n    path: 'notes',\n    component: NotesComponent\n  },\n  {\n    path: 'feedback',\n    component: FeedbackComponent\n  },\n  {\n    path: '',\n    component: NotesComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: '**',\n    component: NotFoundComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    FeedbackComponent,\n    NotesComponent,\n    NotFoundComponent,\n    NoteComponent,\n    NoteTextFilterPipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes, {enableTracing: true})\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ApiService} from '../shared/api.service';\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.css']\n})\nexport class FeedbackComponent implements OnInit {\n  model: FeedbackViewModel = {\n    name: '',\n    email: '',\n    feedback: ''\n  };\n\n  constructor(private apiService: ApiService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  sendFeedback(): void {\n    this.apiService.postFeedback(this.model).subscribe(\n      res => {\n        location.reload();\n      },\n      err => {\n        alert('An error has occurred while sending feedback');\n      }\n    );\n  }\n}\n\nexport interface FeedbackViewModel {\n  name: string;\n  email: string;\n  feedback: string;\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"offset-3\"></div>\n    <div class=\"col-md-6\">\n      <form name=\"form\" #f=\"ngForm\" (ngSubmit)=\"f.form.valid && sendFeedback()\" novalidate class=\"feedback-form\">\n\n        <!-- Name -->\n        <div class=\"form-group\">\n          <label for=\"name\">First Name</label>\n          <input type=\"text\"\n                 id=\"name\"\n                 class=\"form-control\"\n                 name=\"name\"\n                 placeholder=\"Your name\"\n                 [(ngModel)]=\"model.name\"\n                 #name=\"ngModel\"\n                 [ngClass]=\"{'is-invalid': f.submitted && name.invalid}\"\n                 required/>\n          <div *ngIf=\"f.submitted && name.invalid\" class=\"invalid-input\">\n            <div *ngIf=\"name.errors?.required\">Field is required</div>\n          </div>\n        </div>\n\n        <!-- Email -->\n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <input type=\"text\"\n                 id=\"email\"\n                 class=\"form-control\"\n                 name=\"email\"\n                 placeholder=\"Your email\"\n                 [(ngModel)]=\"model.email\"\n                 #email=\"ngModel\"\n                 [ngClass]=\"{'is-invalid':f.submitted && email.invalid}\"\n                 required email/>\n          <div *ngIf=\"f.submitted && email.invalid\" class=\"invalid-input\">\n            <div *ngIf=\"email.errors?.required\">Field is required</div>\n            <div *ngIf=\"email.errors?.email\">Field is not a valid email</div>\n          </div>\n        </div>\n\n        <!-- Feedback -->\n        <div class=\"form-group\">\n          <label for=\"feedback\">Feedback</label>\n          <textarea\n            id=\"feedback\"\n            class=\"form-control\"\n            name=\"feedback\"\n            placeholder=\"Your feedback\"\n            [(ngModel)]=\"model.feedback\"\n            #feedback=\"ngModel\"\n            [ngClass]=\"{'is-invalid': f.submitted && feedback.invalid}\"\n            required minlength=\"10\">\n\t\t\t    </textarea>\n          <div *ngIf=\"f.submitted && feedback.invalid\" class=\"invalid-input\">\n            <div *ngIf=\"feedback.errors?.required\">Field is required</div>\n            <div *ngIf=\"feedback.errors?.minlength\">Field is to small (try 10 characters)</div>\n          </div>\n        </div>\n\n        <button type=\"submit\" class=\"btn btn-info pull-right\">\n          <i class=\"fa fa-envelope-o\"></i>\n          <span> Send Feedback</span>\n        </button>\n      </form>\n    </div>\n    <div class=\"offset-3\"></div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" href=\"#\">\n    <i class=\"fa fa-sticky-note text-warning\"></i>\n    <span class=\"text-warning\"> noteit</span>\n  </a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarColor01\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/notes\">Notes </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/feedback\">Feedback</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Note} from '../model/note';\n\n@Component({\n  selector: 'app-note',\n  templateUrl: './note.component.html',\n  styleUrls: ['./note.component.css']\n})\nexport class NoteComponent implements OnInit {\n\n  @Input() note: Note;\n  @Output() noteUpdated: EventEmitter<Note> = new EventEmitter<Note>();\n  @Output() noteDeleted: EventEmitter<Note> = new EventEmitter<Note>();\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  updateNote() {\n    this.noteUpdated.emit(this.note);\n  }\n\n  deleteNote() {\n    this.noteDeleted.emit(this.note);\n  }\n}\n","<div class=\"card bg-warning\" style=\"border: 4px solid white;\">\n  <div class=\"card-body\" style=\"padding: 8px; margin-top: 8px;\">\n    <div>\n      <!-- Title-->\n      <input type=\"text\"\n             [(ngModel)]=\"note.title\"\n             (change)=\"updateNote()\"\n             class=\"input-label-lg\"\n             maxlength=\"18\" style=\"width: 80%\"/>\n      <a (click)=\"deleteNote()\" class=\"pull-right text-danger\">\n        <i class=\"fa fa-trash-o\"></i>\n      </a>\n    </div>\n    <!-- Text -->\n    <textarea class=\"input-label\"\n              [(ngModel)]=\"note.text\"\n              (change)=\"updateNote()\"\n              style=\"width: 100%\" rows=\"6\"></textarea>\n    <strong class=\"text-info\" style=\"font-size: small\">{{note.lastModifiedOn | date:'dd-MM-yyyy HH:mm'}}</strong>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Notebook} from './model/notebook';\nimport {ApiService} from '../shared/api.service';\nimport {Note} from './model/note';\n\n@Component({\n  selector: 'app-notes',\n  templateUrl: './notes.component.html',\n  styleUrls: ['./notes.component.css']\n})\nexport class NotesComponent implements OnInit {\n  notebooks: Notebook[] = [];\n  notes: Note[] = [];\n  selectedNotebook: Notebook;\n  searchText: string;\n\n  constructor(private apiService: ApiService) {\n  }\n\n  ngOnInit(): void {\n    this.getAllNotebooks();\n    this.getAllNotes();\n  }\n\n  public getAllNotebooks() {\n    this.apiService.getAllNotebooks().subscribe(\n      res => {\n        this.notebooks = res;\n      },\n      err => {\n        alert('An error has occurred');\n      }\n    );\n  }\n\n  getAllNotes() {\n    this.apiService.getAllNotes().subscribe(\n      res => {\n        this.notes = res;\n      },\n      error => {\n        alert('Error occurred while downloading message');\n      }\n    );\n  }\n\n  createNotebook() {\n    const newNotebook: Notebook = {\n      name: 'New notebook',\n      id: null,\n      numberOfNotes: 0\n    };\n\n    this.apiService.postNoteBook(newNotebook).subscribe(\n      res => {\n        newNotebook.id = res.id;\n        this.notebooks.push(newNotebook);\n      },\n      error => {\n        alert('An error has occurred while saving notebook');\n      }\n    );\n  }\n\n  updateNotebook(updatedNotebook: Notebook) {\n    this.apiService.postNoteBook(updatedNotebook).subscribe(\n      res => {\n      },\n      error => {\n        alert('An error has occurred while saving notebook');\n      }\n    );\n  }\n\n  deleteNotebook(notebook: Notebook) {\n    if (confirm('Are you sure you want to delete notebook?')) {\n      this.apiService.deleteNotebook(notebook.id).subscribe(\n        res => {\n          const indexOfNotebook = this.notebooks.indexOf(notebook);\n          this.notebooks.splice(indexOfNotebook, 1);\n        },\n        err => {\n          alert('Could not delete network');\n        }\n      );\n    }\n  }\n\n  deleteNote(note: Note) {\n    if (confirm('Are you sure you want to delete this note?')) {\n      this.apiService.deleteNote(note.id).subscribe(\n        res => {\n          const indexOfTheNote = this.notes.indexOf(note);\n          this.notes.splice(indexOfTheNote, 1);\n        },\n        error => {\n          alert('An error has occurred while deleting the note');\n        }\n      );\n    }\n  }\n\n  createNote(specificNotebookId: string) {\n    const newNote: Note = {\n      id: null,\n      title: 'New note',\n      text: 'Write some text here',\n      lastModifiedOn: null,\n      notebookId: specificNotebookId\n    };\n\n    this.apiService.postNote(newNote).subscribe(\n      res => {\n        newNote.id = res.id;\n        this.notes.push(newNote);\n      },\n      error => {\n        alert('An error occurred while saving note');\n      }\n    );\n  }\n\n  selectNotebook(notebook: Notebook) {\n    this.selectedNotebook = notebook;\n    this.apiService.getNotesByNotebook(notebook.id).subscribe(\n      res => {\n        this.notes = res;\n      },\n      error => {\n        alert('An error has occurred wile downloading the notes');\n      }\n    );\n  }\n\n  updateNote(updatedNote: Note) {\n    this.apiService.postNote(updatedNote).subscribe(\n      res => {\n      },\n      error => {\n        alert('An error occurred while saving note');\n      }\n    );\n  }\n\n  selectAllNotes() {\n    this.selectedNotebook = null;\n    this.getAllNotes();\n  }\n}\n","<div class=\"container\">\n  <!-- Note menu -->\n  <div class=\"row\" style=\"margin-top:12px;\">\n    <div class=\"col-md-8\">\n      <input type=\"text\"\n             [(ngModel)]=\"searchText\"\n             class=\"form-control\"\n             style=\"width: 100%;\"\n             placeholder=\"Search notes...\">\n    </div>\n    <div class=\"col-md-4\">\n      <button type=\"buton\"\n              (click)=\"createNotebook()\"\n              class=\"btn btn-info pull-right\"\n              style=\"margin-left:12px;\"><i class=\"fa fa-plus\"></i> New notebook\n      </button>\n      <button type=\"button\"\n              (click)=\"createNote(selectedNotebook.id)\"\n              [disabled]=\"selectedNotebook == null\"\n              class=\"btn btn-warning pull-right\"\n              style=\"margin-left:12px;\"><i class=\"fa fa-plus\"></i> New note\n      </button>\n    </div>\n\n  </div>\n\n  <!-- Note content -->\n  <div class=\"row\" style=\"margin-top: 28px;\">\n    <!-- Notebooks Menu -->\n    <div class=\"col-md-3\">\n      <br>\n      <div class=\"list-group list-group-flush\">\n        <a (click)=\"selectAllNotes()\" class=\"list-group-item list-group-item-action\">\n          <i class=\"fa fa-book\"></i>&nbsp;All\n        </a>\n        <!-- Notebook List -->\n        <a *ngFor=\"let notebook of notebooks\" (click)=\"selectNotebook(notebook)\" class=\"list-group-item list-group-item-action\">\n          <i class=\"fa fa-book\"></i>&nbsp;\n          <input [(ngModel)]=\"notebook.name\" (change)=\"updateNotebook(notebook)\" type=\"text\" class=\"input-label\"\n                 style=\"width: 80%\"/>\n          <a (click)=\"deleteNotebook(notebook)\" class=\"pull-right text-danger\">\n            <i class=\"fa fa-trash-o\"></i>\n          </a>\n        </a>\n      </div>\n    </div>\n\n    <!-- Notes Panel -->\n    <div class=\"col-md-9\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <!-- Message if there are no notes -->\n          <h3 *ngIf=\"selectedNotebook != null\">{{selectedNotebook.name}}</h3>\n          <h3 *ngIf=\"selectedNotebook == null\">All notes</h3>\n          <p *ngIf=\"this.notes.length === 0\">There are no notes to display :(</p>\n        </div>\n      </div>\n      <div class=\"row\">\n        <!-- Note list -->\n        <app-note *ngFor=\"let n of notes | noteTextFilter:searchText\"\n                  [note]=\"n\"\n                  (noteUpdated)=\"updateNote($event)\"\n                  (noteDeleted)=\"deleteNote($event)\">\n        </app-note>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Notebook} from '../notes/model/notebook';\nimport {FeedbackViewModel} from '../feedback/feedback.component';\nimport {Note} from '../notes/model/note';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private BASE_URL = 'http://localhost:8082/api';\n  private ALL_NOTEBOOKS_URL = `${this.BASE_URL}\\\\notebooks\\\\all`;\n  private SEND_FEEDBACK_URL = `${this.BASE_URL}\\\\feedback`;\n  private SAVE_UPDATE_NOTEBOOK = `${this.BASE_URL}\\\\notebooks`;\n  private DELETE_NOTEBOOK_URL = `${this.BASE_URL}\\\\notebooks\\\\`;\n  private ALL_NOTES_URL = `${this.BASE_URL}\\\\notes\\\\all`;\n  private NOTES_BY_NOTEBOOK_URL = `${this.BASE_URL}\\\\notes\\\\byNotebook\\\\`;\n  private SAVE_UPDATE_NOTE_URL = `${this.BASE_URL}\\\\notes\\\\`;\n  private DELETE_NOTE_URL = `${this.BASE_URL}\\\\notes\\\\`;\n\n  constructor(private  http: HttpClient) {\n\n  }\n\n  getAllNotebooks(): Observable<Notebook[]> {\n    return this.http.get<Notebook[]>(this.ALL_NOTEBOOKS_URL);\n  }\n\n  getAllNotes(): Observable<Note[]> {\n    return this.http.get<Note[]>(this.ALL_NOTES_URL);\n  }\n\n  getNotesByNotebook(notebookId: string): Observable<Note[]> {\n    return this.http.get<Note[]>(this.NOTES_BY_NOTEBOOK_URL + notebookId);\n  }\n\n  postFeedback(feedback: FeedbackViewModel): Observable<any> {\n    return this.http.post(this.SEND_FEEDBACK_URL, feedback);\n  }\n\n  postNoteBook(notebook: Notebook): Observable<Notebook> {\n    return this.http.post<Notebook>(this.SAVE_UPDATE_NOTEBOOK, notebook);\n  }\n\n  postNote(note: Note): Observable<Note>{\n    return this.http.post<Note>(this.SAVE_UPDATE_NOTE_URL, note);\n  }\n\n  deleteNotebook(id: string): Observable<any> {\n    return this.http.delete(this.DELETE_NOTEBOOK_URL + id);\n  }\n\n  deleteNote(notId: string): Observable<any>{\n    return this.http.delete(this.DELETE_NOTE_URL + notId);\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {Note} from '../notes/model/note';\n\n@Pipe({\n  name: 'noteTextFilter'\n})\nexport class NoteTextFilterPipe implements PipeTransform {\n\n  transform(notes: Note[], text: string): Note[] {\n    if (text == null || text === '') {\n      return notes;\n    }\n    return notes.filter(n => n.title.includes(text) || n.text.includes(text));\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}